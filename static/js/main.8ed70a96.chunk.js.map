{"version":3,"sources":["App.js","index.js"],"names":["App","state","topImages","search","toogleEnable","cardView","componentDidMount","axios","get","headers","Authorization","then","imageList","setState","data","catch","err","console","log","handleSearch","e","target","value","handleToggle","handleCardView","tableView","handleTableView","filterToggleTopImages","this","filter","images","type","sort","a","b","datetime","title","toLowerCase","indexOf","score","points","topic_id","className","placeholder","onChange","classnames","onClick","data-toggle","data-placement","length","map","i","key","src","link","alt","images_count","moment","unix","format","style","background","fontSize","cursor","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ed70a96.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\"; //  for performing HTTP requests\nimport moment from \"moment\"; // for formatting dates\nimport classnames from \"classnames\"; // for conditionally joining class names together.\n\nexport default class App extends Component {\n  state = {\n    // initail stage\n    topImages: [],\n\n    // search\n    search: \"\",\n\n    // toggle\n    toogleEnable: false,\n\n    // card view\n    cardView: true\n  };\n\n  componentDidMount = () => {\n    // get images which are under top, week and time from imgur\n    axios\n      .get(`https://api.imgur.com/3/gallery/top/time/week`, {\n        headers: { Authorization: \"Client-ID 18eef0ce23381ff\" }\n      })\n      .then(imageList => {\n        this.setState({\n          topImages: imageList.data.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  // get search input value\n  handleSearch = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  // handle toggle state\n  handleToggle = () => {\n    this.setState({ toogleEnable: !this.state.toogleEnable });\n  };\n\n  // handle card view state\n  handleCardView = () => {\n    this.setState({ cardView: true, tableView: false });\n  };\n\n  // handle table view state\n  handleTableView = () => {\n    this.setState({ cardView: false, tableView: true });\n  };\n\n  render() {\n    // get only images from the topImages array\n    let filterOnlyImages = this.state.topImages.filter(images => {\n      return images.images && images.images[0].type === \"image/jpeg\";\n    });\n\n    // sort results by latest images first.\n    let sortByTime = filterOnlyImages.sort((a, b) => {\n      return b.datetime - a.datetime;\n    });\n\n    // search images\n    let filterSearchTopImages = sortByTime.filter(images => {\n      return (\n        images.title.toLowerCase().indexOf(this.state.search.toLowerCase()) !==\n        -1\n      );\n    });\n\n    // filter results by sum of “points”, “score” and “topic_id” adds up to an even number\n    let filterToggleTopImages = filterSearchTopImages;\n\n    if (this.state.toogleEnable === true) {\n      filterToggleTopImages = filterToggleTopImages.filter(images => {\n        return (images.score + images.points + images.topic_id) % 2 === 0;\n      });\n    }\n\n    return (\n      <div className=\"container-fluid p-0\">\n        {/* starts of page head sec */}\n        <div className=\"row m-0 page-head\">\n          <div className=\"col\">\n            <h1 className=\"page-title\">\n              Top Images of The Week From <b className=\"text-dark\">Imgur</b>{\" \"}\n              Gallery\n            </h1>\n            <div className=\"search-bar\">\n              <input\n                className=\"search-input\"\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={this.state.search}\n                onChange={this.handleSearch}\n              />\n              <span className=\"search-btn\">\n                <i className=\"fab fa-sistrix\"></i>\n              </span>\n            </div>\n          </div>\n        </div>\n        {/* ends of page head sec */}\n        {/* starts of content */}\n        <div className=\"customize-container p-0\">\n          {/* starts of filter button section */}\n          <div className=\"row m-0\">\n            <div className=\"col p-0\">\n              <button\n                className={classnames(\"action-btns mr-md-3\", {\n                  \"action-btns-active\": this.state.toogleEnable\n                })}\n                onClick={this.handleToggle}\n                type=\"button\"\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title=\"This is a toggle button that filter results where the sum of “points”, “score” and “topic_id” adds up to an even number or not.\"\n              >\n                <i className=\"fas fa-filter\"></i>\n              </button>\n              <button\n                className={classnames(\"action-btns\", {\n                  \"action-btns-active\": !this.state.cardView\n                })}\n                onClick={this.handleTableView}\n                type=\"button\"\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title=\"Display results in a table.\"\n              >\n                <i className=\"fas fa-list\"></i>\n              </button>\n              <button\n                className={classnames(\"action-btns\", {\n                  \"action-btns-active\": this.state.cardView\n                })}\n                onClick={this.handleCardView}\n                type=\"button\"\n                data-toggle=\"tooltip\"\n                data-placement=\"bottom\"\n                title=\"Display results by cards.\"\n              >\n                <i className=\"fa fa-th\"></i>\n              </button>\n            </div>\n          </div>\n          {/* ends of filter button section */}\n          {/* starts of desplaying no of results */}\n          <div className=\"row m-0\">\n            <div className=\"col p-0\">\n              <p className=\"noOfResults\">\n                <b>{filterToggleTopImages.length} results</b>\n              </p>\n            </div>\n          </div>\n          {/* ends of desplaying no of results */}\n\n          <div className=\"row m-0\">\n            <div className=\"col p-0\">\n              {/* starts of displaying data in a table or by cards */}\n              {!this.state.cardView ? (\n                <div className=\"table-responsive px-3\">\n                  <table className=\"table table-bordered table-hover mt-3\">\n                    <thead>\n                      <tr className=\"table-header-row\">\n                        <td className=\"table-title-col\">Title</td>\n                        <td className=\"table-date-col\">Date</td>\n                        <td className=\"table-img-count-col\">\n                          No. of Additional Images\n                        </td>\n                        <td className=\"table-image-col\">Image</td>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filterToggleTopImages.map((images, i) => (\n                        <tr key={i}>\n                          <td className=\"table-title\">{images.title}</td>\n                          <td className=\"table-date\">\n                            {moment\n                              .unix(images.datetime)\n                              .format(\"DD/MM/YYYY HH:mm a\")}\n                          </td>\n                          <td className=\"table-count-images\">\n                            {images.images_count - 1 !== 0\n                              ? images.images_count - 1\n                              : \"-\"}\n                          </td>\n                          <td>\n                            <img\n                              src={images.images && images.images[0].link}\n                              className=\"table-images\"\n                              alt={images.title}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              ) : (\n                filterToggleTopImages.map((images, i) => (\n                  <div key={i} className=\"card\">\n                    <div className=\"card-image-div\">\n                      <img\n                        src={images.images && images.images[0].link}\n                        className=\"card-images\"\n                        alt={images.title}\n                      />\n                    </div>\n\n                    <p className=\"image-count\">\n                      {images.images_count - 1 !== 0\n                        ? images.images_count - 1\n                        : \"No\"}{\" \"}\n                      additional images\n                    </p>\n                    <p className=\"title\">{images.title}</p>\n                    <p className=\"time\">\n                      {moment\n                        .unix(images.datetime)\n                        .format(\"DD/MM/YYYY HH:mm a\")}\n                    </p>\n                  </div>\n                ))\n              )}\n            </div>\n            {/* ends of displaying data in a table or by cards */}\n          </div>\n        </div>\n\n        {/* starts of footer sec */}\n        <div\n          className=\"row m-0 mt-5\"\n          style={{ background: \"#17252a\", fontSize: \"14px\", cursor: \"default\" }}\n        >\n          <div className=\"col\">\n            <p className=\"text-light text-center mt-3\">\n              Spritzer Labs - Assessment (Front-end Development - React) by\n              Chamara Madhushanka\n            </p>\n          </div>\n        </div>\n        {/* ends of footer sec */}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}